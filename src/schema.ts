/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/users": {
    /** @description ユーザー一覧取得 */
    get: operations["UserIndex"];
    /** @description ユーザー登録 */
    post: operations["UserCreate"];
  };
  "/api/users/{user_id}": {
    /** @description ユーザー詳細 */
    get: operations["UserShow"];
    /** @description ユーザー削除 */
    delete: operations["UserDelete"];
    /** @description ユーザー更新 */
    patch: operations["UserUpdate"];
  };
  "/api/spots": {
    /** @description スポット一覧取得 */
    get: operations["SpotIndex"];
  };
  "/api/spots/{spot_id}": {
    /** @description スポット詳細取得 */
    get: operations["SpotShow"];
  };
  "/api/users/{user_id}/spots": {
    /** @description ユーザー毎スポット一覧取得 */
    get: operations["User/SpotIndex"];
    /** @description スポット登録 */
    post: operations["SpotCreate"];
  };
  "/api/users/{user_id}/spots/{spot_id}": {
    /** @description スポット削除 */
    delete: operations["SpotDelete"];
    /** @description スポット更新 */
    patch: operations["SpotUpdate"];
  };
  "/api/records": {
    /** @description ツーリング記録一覧取得 */
    get: operations["RecordIndex"];
  };
  "/api/users/{user_id}/records": {
    /** @description ツーリング記録一覧取得 */
    get: operations["User/RecordIndex"];
  };
  "/api/spots/{spot_id}/records": {
    /** @description スポット毎ツーリング記録一覧取得 */
    get: operations["Spot/RecordIndex"];
  };
  "/api/records/{record_id}": {
    /** @description ツーリング記録詳細 */
    get: operations["RecordShow"];
  };
  "/api/users/{user_id}/spots/{spot_id}/records": {
    /** @description ツーリング記録登録 */
    post: operations["RecordCreate"];
  };
  "/api/users/{user_id}/spots/{spot_id}/records/{record_id}": {
    /** @description ツーリング記録削除 */
    delete: operations["RecordDelete"];
    /** @description ツーリング記録更新 */
    patch: operations["RecordUpdate"];
  };
  "/api/likes": {
    /** @description ツーリングいいね */
    get: operations["LikeIndex"];
  };
  "/api/like": {
    /** @description ツーリングいいね作成 */
    post: operations["LikeCreate"];
    /** @description ツーリングいいね削除 */
    delete: operations["LikeDelete"];
  };
  "/api/users/{user_id}/comments": {
    /** @description ユーザー毎コメント一覧 */
    get: operations["CommentIndex"];
  };
  "/api/records/{record_id}/comments": {
    /** @description スポットコメント一覧 */
    get: operations["UserCommentIndex"];
  };
  "/api/users/{user_id}/records/{record_id}/comments": {
    /** @description コメント作成 */
    post: operations["CommentCreate"];
  };
  "/api/users/{user_id}/records/{record_id}/comments/{comment_id}": {
    /** @description コメント削除 */
    delete: operations["CommentDelete"];
    /** @description コメント更新 */
    patch: operations["CommentUpdate"];
  };
  "/api/users/{user_id}/bookmarks": {
    /** @description ブックマーク */
    get: operations["BookmarkIndex"];
  };
  "/api/users/{user_id}/spots/{spot_id}/bookmarks": {
    /** @description ブックマーク作成 */
    post: operations["BookmarkCreate"];
  };
  "/api/users/{user_id}/spots/{spot_id}/bookmarks/{bookmark_id}": {
    /** @description ブックマーク削除 */
    delete: operations["BookmarkDelete"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** @description ユーザー */
    User: {
      /** Format: int64 */
      id?: number;
      email?: string;
      password?: string;
      name?: string;
      area?: string;
      prefecture?: string;
      url?: string;
      bike_name?: string;
      experience?: number;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    Spot: {
      /** Format: int64 */
      user_id?: number;
      name?: string;
      image?: string;
      type?: string;
      address?: string;
      hp_url?: string;
      open_time?: string;
      off_day?: string;
      parking?: boolean;
      description?: string;
      /** Format: float */
      lat?: number;
      /** Format: float */
      lng?: number;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    Record: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      user_id?: number;
      /** Format: int64 */
      spot_id?: number;
      /** Format: date */
      date?: string;
      weather?: string;
      /** Format: float */
      temperature?: number;
      /** Format: float */
      running_time?: number;
      /** Format: float */
      distance?: number;
      description?: string;
      /** Format: date-time */
      created_at?: string;
      /** Format: date-time */
      updated_at?: string;
    };
    Like: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      user_id?: number;
      /** Format: int64 */
      record_id?: number;
      /** Format: date-time */
      created_at?: string;
    };
    Comment: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      user_id?: number;
      /** Format: int64 */
      record_id?: number;
      user_name?: string;
      text?: string;
      /** Format: date-time */
      created_at?: string;
    };
    Bookmark: {
      /** Format: int64 */
      id?: number;
      /** Format: int64 */
      user_id?: number;
      /** Format: int64 */
      spot_id?: number;
      /** Format: date-time */
      created_at?: string;
    };
  };
  responses: never;
  parameters: {
    /** @description ユーザーID */
    UserId: number;
    /** @description スポットID */
    SpotId: number;
    /** @description レコードID */
    RecordId: number;
    /** @description コメントID */
    CommentId: number;
    /** @description ブックマークID */
    BookmarkId: number;
  };
  requestBodies: {
    User?: {
      content: {
        "application/json": {
          email?: string;
          password: string;
          name: string;
          area?: string;
          prefecture?: string;
          url?: string;
          bike_name?: string;
          /** Format: int8 */
          experience?: number;
        };
      };
    };
    Spot?: {
      content: {
        "application/json": {
          name: string;
          image?: string;
          type?: string;
          address?: string;
          hp_url?: string;
          open_time?: string;
          off_day?: string;
          parking?: boolean;
          description?: string;
          /** Format: float */
          lat?: number;
          /** Format: float */
          lng?: number;
        };
      };
    };
    Record?: {
      content: {
        "application/json": {
          /** Format: date */
          date?: string;
          weather?: string;
          /** Format: float */
          temperature?: number;
          /** Format: float */
          running_time?: number;
          /** Format: float */
          distance?: number;
          description?: string;
        };
      };
    };
    Like?: {
      content: {
        "application/json": {
          /** Format: int64 */
          user_id: number;
          /** Format: int64 */
          record_id: number;
        };
      };
    };
    Comment?: {
      content: {
        "application/json": {
          user_name?: string;
          text?: string;
        };
      };
    };
    Bookmark?: {
      content: {
        "application/json": {
          /** Format: int64 */
          user_id: number;
          /** Format: int64 */
          spot_id: number;
        };
      };
    };
  };
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** @description ユーザー一覧取得 */
  UserIndex: {
    responses: {
      /** @description ユーザー一覧 */
      200: {
        content: {
          "application/json": {
            users?: components["schemas"]["User"];
          };
        };
      };
    };
  };
  /** @description ユーザー登録 */
  UserCreate: {
    requestBody: components["requestBodies"]["User"];
    responses: {
      /** @description Created */
      201: never;
    };
  };
  /** @description ユーザー詳細 */
  UserShow: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** @description ユーザーデータ */
      200: {
        content: {
          "application/json": {
            user?: components["schemas"]["User"];
          };
        };
      };
    };
  };
  /** @description ユーザー削除 */
  UserDelete: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  /** @description ユーザー更新 */
  UserUpdate: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
      };
    };
    requestBody: components["requestBodies"]["User"];
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  /** @description スポット一覧取得 */
  SpotIndex: {
    responses: {
      /** @description スポットデータ */
      200: {
        content: {
          "application/json": {
            spots?: components["schemas"]["Spot"];
          };
        };
      };
    };
  };
  /** @description スポット詳細取得 */
  SpotShow: {
    parameters: {
      path: {
        spot_id: components["parameters"]["SpotId"];
      };
    };
    responses: {
      /** @description スポットデータ */
      200: {
        content: {
          "application/json": {
            spot?: components["schemas"]["Spot"];
          };
        };
      };
    };
  };
  /** @description ユーザー毎スポット一覧取得 */
  "User/SpotIndex": {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** @description スポットデータ */
      200: {
        content: {
          "application/json": {
            spots?: components["schemas"]["Spot"];
          };
        };
      };
    };
  };
  /** @description スポット登録 */
  SpotCreate: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
      };
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Spot"];
      };
    };
    responses: {
      /** @description Created */
      201: never;
    };
  };
  /** @description スポット削除 */
  SpotDelete: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        spot_id: components["parameters"]["SpotId"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  /** @description スポット更新 */
  SpotUpdate: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        spot_id: components["parameters"]["SpotId"];
      };
    };
    requestBody: components["requestBodies"]["Spot"];
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  /** @description ツーリング記録一覧取得 */
  RecordIndex: {
    responses: {
      /** @description ツーリング記録データ */
      200: {
        content: {
          "application/json": {
            records?: components["schemas"]["Record"];
          };
        };
      };
    };
  };
  /** @description ツーリング記録一覧取得 */
  "User/RecordIndex": {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** @description ツーリング記録データ */
      200: {
        content: {
          "application/json": {
            records?: components["schemas"]["Record"];
          };
        };
      };
    };
  };
  /** @description スポット毎ツーリング記録一覧取得 */
  "Spot/RecordIndex": {
    parameters: {
      path: {
        spot_id: components["parameters"]["SpotId"];
      };
    };
    responses: {
      /** @description ツーリング記録データ */
      200: {
        content: {
          "application/json": {
            records?: components["schemas"]["Record"];
          };
        };
      };
    };
  };
  /** @description ツーリング記録詳細 */
  RecordShow: {
    parameters: {
      path: {
        record_id: components["parameters"]["RecordId"];
      };
    };
    responses: {
      /** @description ツーリング記録データ */
      200: {
        content: {
          "application/json": {
            record?: components["schemas"]["Record"];
          };
        };
      };
    };
  };
  /** @description ツーリング記録登録 */
  RecordCreate: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        spot_id: components["parameters"]["SpotId"];
      };
    };
    requestBody: components["requestBodies"]["Record"];
    responses: {
      /** @description Created */
      201: never;
    };
  };
  /** @description ツーリング記録削除 */
  RecordDelete: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        spot_id: components["parameters"]["SpotId"];
        record_id: components["parameters"]["RecordId"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  /** @description ツーリング記録更新 */
  RecordUpdate: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        spot_id: components["parameters"]["SpotId"];
        record_id: components["parameters"]["RecordId"];
      };
    };
    requestBody: components["requestBodies"]["Record"];
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  /** @description ツーリングいいね */
  LikeIndex: {
    responses: {
      /** @description ツーリングいいね */
      200: {
        content: {
          "application/json": {
            likes?: components["schemas"]["Like"];
          };
        };
      };
    };
  };
  /** @description ツーリングいいね作成 */
  LikeCreate: {
    requestBody: components["requestBodies"]["Like"];
    responses: {
      /** @description Created */
      201: never;
    };
  };
  /** @description ツーリングいいね削除 */
  LikeDelete: {
    requestBody: components["requestBodies"]["Like"];
    responses: {
      /** @description No content */
      204: never;
    };
  };
  /** @description ユーザー毎コメント一覧 */
  CommentIndex: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** @description コメントデータ */
      200: {
        content: {
          "application/json": {
            comments?: components["schemas"]["Comment"];
          };
        };
      };
    };
  };
  /** @description スポットコメント一覧 */
  UserCommentIndex: {
    parameters: {
      path: {
        record_id: components["parameters"]["RecordId"];
      };
    };
    responses: {
      /** @description コメントデータ */
      200: {
        content: {
          "application/json": {
            comments?: components["schemas"]["Comment"];
          };
        };
      };
    };
  };
  /** @description コメント作成 */
  CommentCreate: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        record_id: components["parameters"]["RecordId"];
      };
    };
    requestBody: components["requestBodies"]["Comment"];
    responses: {
      /** @description Created */
      201: never;
    };
  };
  /** @description コメント削除 */
  CommentDelete: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        record_id: components["parameters"]["RecordId"];
        comment_id: components["parameters"]["CommentId"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  /** @description コメント更新 */
  CommentUpdate: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        record_id: components["parameters"]["RecordId"];
        comment_id: components["parameters"]["CommentId"];
      };
    };
    requestBody: components["requestBodies"]["Comment"];
    responses: {
      /** @description No Content */
      204: never;
    };
  };
  /** @description ブックマーク */
  BookmarkIndex: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
      };
    };
    responses: {
      /** @description ブックマークデータ */
      200: {
        content: {
          "application/json": {
            bookmarks?: components["schemas"]["Bookmark"];
          };
        };
      };
    };
  };
  /** @description ブックマーク作成 */
  BookmarkCreate: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        spot_id: components["parameters"]["SpotId"];
      };
    };
    responses: {
      /** @description Created */
      201: never;
    };
  };
  /** @description ブックマーク削除 */
  BookmarkDelete: {
    parameters: {
      path: {
        user_id: components["parameters"]["UserId"];
        spot_id: components["parameters"]["SpotId"];
        bookmark_id: components["parameters"]["BookmarkId"];
      };
    };
    responses: {
      /** @description No Content */
      204: never;
    };
  };
}
